p {
  color: white;
  margin: 0%;
  margin-block-end: 10px;
}

.btn {
  margin-top: 10px;
}

h6 {
  text-align:center;
}

.flex-container {
  display: flex;
  flex-wrap: wrap;
  gap: 16px;
  width: 85%;
  margin: auto;
  /* margin-left: 2%; */
}

.flex-item {
  flex: 1 1 calc(15% - 50px);
  box-sizing: border-box;
  cursor: pointer;
}

.ContenedorAvatar {
  border: 1px solid;
  width: 30%;
  height: 150px;
  display: flex;
  justify-content: end;
}

.ContenedorAvatares {
  overflow-y: auto; /* Activamos el scroll horizontal */
  overflow-x: hidden;
  padding-bottom: 10px;
  gap: 15px; /* Espacio entre los iconos */
}

.icono {
  font-size: 2rem; /* Tamaño de los iconos */
  padding: 20px;
  transition: transform 0.3s ease-in-out; /* Efecto de transición */
}

.icono:hover {
  transform: scale(1.2); /* Efecto al pasar el ratón */
}

.imagen-container {
  display: flex;
  flex-wrap: wrap;
  gap: 15px;
  justify-content: flex-start;
}

.imagen-item img {
  width: 170px;
  height: 100%;
  object-fit: cover;
  cursor: pointer;
}

.nav-pill, .nav-link.active {
  background-color: blueviolet !important;
  color: white !important;
}

.box {
  display: grid;
  place-content: center;
  color: white;
  text-shadow: 0 1px 0 #000;

  --border-angle: 0turn; /* For animation */
  --main-bg: conic-gradient(
      from var(--border-angle),
      #213,
      #112 5%,
      #112 60%,
      #213 95%
    );

  border: solid 5px transparent;
  border-radius: 2em;
  --gradient-border: conic-gradient(from var(--border-angle), transparent 25%, #08f, #f03 99%, transparent);

  background:
    /* padding-box clip this background into the overall element except the border */
    var(--main-bg) padding-box,
    /* border-box extends this background to the border space */
    var(--gradient-border) border-box,
    /* Duplicate main background to fill in behind the gradient border. You can remove this if you want the border to extend "outside" the box background. */
    var(--main-bg) border-box;

  background-position: center center;

  animation: bg-spin 3s linear infinite;
}

@keyframes bg-spin {
  to {
    --border-angle: 1turn;
  }
}

@property --border-angle {
  syntax: "<angle>";
  inherits: true;
  initial-value: 0turn;
}

.imgEffectHover {
  --color: #FA6900; /* the color of the border */
  --border: 10px;   /* the thickness of the border */
  --offset: 30px;   /* control the movement of the border */
  --gap: 5px;       /* the gap on hover */

  border-radius: 50%;
  cursor: pointer;
  padding: calc(var(--border) + var(--gap));
  border: var(--offset) solid #0000;
  --_m: radial-gradient(50% 50%, #000 calc(100% - var(--offset)),#0000 calc(100% - var(--border)));
  -webkit-mask: var(--_m);
          mask: var(--_m);
  --_g: #0000 calc(99% - var(--border)), var(--color) calc(100% - var(--border)) 99%,#0000;
  --_s: var(--offset);
  --_r: 100% 100% at;
  background:
    radial-gradient(var(--_r) 0    0   ,var(--_g)) calc(100% + var(--_s)) calc(100% + var(--_s)),
    radial-gradient(var(--_r) 100% 0   ,var(--_g)) calc(0%   - var(--_s)) calc(100% + var(--_s)),
    radial-gradient(var(--_r) 0    100%,var(--_g)) calc(100% + var(--_s)) calc(0%   - var(--_s)),
    radial-gradient(var(--_r) 100% 100%,var(--_g)) calc(0%   - var(--_s)) calc(0%   - var(--_s));
  background-size: 50% 50%;
  background-repeat: no-repeat;
  transition: .4s;
}

.imgEffectHover:hover {
  --_s: 0px
}

.card {
  width: 71.5vw;
  height: 100vw;
  position: relative;
  overflow: hidden;
  margin: 20px;
  z-index: 10;
  touch-action: none;
  border-radius: 5% / 3.5%;
  box-shadow:
    -5px -5px 5px -5px var(--color1),
    5px 5px 5px -5px var(--color2),
    -7px -7px 10px -5px transparent,
    7px 7px 10px -5px transparent,
    0 0 5px 0px rgba(255,255,255,0),
    0 55px 35px -20px rgba(0, 0, 0, 0.5);
  transition: transform 0.5s ease, box-shadow 0.2s ease;
  will-change: transform, filter;
  background-color: #040712;
  background-image: var(--front);
  background-size: cover;
  background-repeat: no-repeat;
  background-position: 50% 50%;
  transform-origin: center;
}

@media screen and (min-width: 600px) {
  .card {
    width: clamp(12.9vw, 61vh, 18vw);
    height: clamp(18vw, 85vh, 25.2vw);
  }
}

.card:hover {
  box-shadow:
    -20px -20px 30px -25px var(--color1),
    20px 20px 30px -25px var(--color2),
    -7px -7px 10px -5px var(--color1),
    7px 7px 10px -5px var(--color2),
    0 0 13px 4px rgba(255,255,255,0.3),
    0 55px 35px -20px rgba(0, 0, 0, 0.5);
}

.card.eevee {
  --color1: #ec9bb6;
  --color2: #ccac6f;
  --color3: #69e4a5;
  --color4: #8ec5d6;
  --color5: #b98cce;
  --front: var(--eeveefront);
}

.card:before,
.card:after {
  content: "";
  position: absolute;
  left: 0;
  right: 0;
  bottom: 0;
  top: 0;
  background-repeat: no-repeat;
  opacity: .5;
  mix-blend-mode: color-dodge;
  transition: all .33s ease;
}

.card.active,
.card:hover {
  animation: none;
  transition: box-shadow 0.1s ease-out;
}

.card.active:before,
.card:hover:before {
  animation: none;
  background-image: linear-gradient(
    110deg,
    transparent 25%,
    var(--color1) 48%,
    var(--color2) 52%,
    transparent 75%
  );
  background-position: 50% 50%;
  background-size: 250% 250%;
  opacity: .88;
  filter: brightness(.66) contrast(1.33);
  transition: none;
}

.card.active:before,
.card:hover:before,
.card.active:after,
.card:hover:after {
  animation: none;
  transition: none;
}


.card.eevee:hover {
  box-shadow:
    0 0 30px -5px white,
    0 0 10px -2px white,
    0 55px 35px -20px rgba(0, 0, 0, 0.5);
}

.card.eevee:hover:before,
.card.eevee.active:before {
  background-image: linear-gradient(
    115deg,
    transparent 20%,
    var(--color1) 36%,
    var(--color2) 43%,
    var(--color3) 50%,
    var(--color4) 57%,
    var(--color5) 64%,
    transparent 80%
  );
}

@media screen and (min-width: 600px) {
  .cards {
    flex-direction: row;
  }
}

.cards .card {
  &:nth-child(2) {
    &, &:before, &:after {
      animation-delay: 0.25s;
    }
  }
  &:nth-child(3) {
    &, &:before, &:after {
      animation-delay: 0.5s;
    }
  }
  &:nth-child(4) {
    &, &:before, &:after {
      animation-delay: 0.75s;
    }
  }
}

.center-container {
  display: flex;
  justify-content: center;  /* Centrado horizontal */
  align-items: center;
  z-index: 1;
}

.center-container:hover {
  z-index: 990;
}

.ulPlataforma {
  /* position:absolute;
  top:50%;
  left:50%; */
  transform:translate(-50%, -50%);
  /* display:flex; */
  margin:0;
  padding:0;
}

.ulPlataforma .liPlataforma {
  list-style:none;
  margin:0 5px;
}

.Plataformaul .liPlataforma a .fa {
  font-size: 40px;
  color: #262626;
  line-height:80px;
  transition: .5s;
  padding-right: 14px;
}

.ulPlataforma .liPlataforma a span {
  padding:0;
  margin:0;
  position:absolute;
  top: 30px;
  color: #262626;
  letter-spacing: 4px;
  transition: .5s;
  /* color: white; */
}

.ulPlataforma:hover .liPlataforma a span {
  color: white;
  z-index: 1005;
}

.ulPlataforma .liPlataforma a {
  text-decoration: none;
  display:absolute;
  display:block;
  width:210px;
  height:80px;
  background:  gainsboro;
  text-align:left;
  padding-left: 20px;
  transform: rotate(-30deg) skew(25deg) translate(0,0);
  transition:.5s;
  box-shadow: -20px 20px 10px rgba(0,0,0,.5);
}
.ulPlataforma .liPlataforma a:before {
  content: '';
  position: absolute;
  top:10px;
  left:-20px;
  height:100%;
  width:20px;
  background: #b1b1b1;
  transform: .5s;
  transform: rotate(0deg) skewY(-45deg);
}
.ulPlataforma .liPlataforma a:after {
  content: '';
  position: absolute;
  bottom:-20px;
  left:-10px;
  height:20px;
  width:100%;
  background: #b1b1b1;
  transform: .5s;
  transform: rotate(0deg) skewX(-45deg);
}

.ulPlataforma .liPlataforma a:hover {
  transform: rotate(-30deg) skew(25deg) translate(20px,-15px);
  box-shadow: -50px 50px 50px rgba(0,0,0,.5);
}

.ulPlataforma .liPlataforma:hover .fa {
  color:#fff;
}

.ulPlataforma .liPlataforma:hover span {
  color:#fff;
}

.ulPlataforma .liPlataforma:hover:nth-child(1) a{
  background: #3b5998;
}
.ulPlataforma .liPlataforma:hover:nth-child(1) a:before{
  background: #365492;
}
.ulPlataforma .liPlataforma:hover:nth-child(1) a:after{
  background: #4a69ad;
}



.ulPlataforma .liPlataformaAgregada {
  list-style:none;
  margin:0 5px;
}

.Plataformaul .liPlataformaAgregada a .fa {
  font-size: 40px;
  color: #262626;
  line-height:80px;
  transition: .5s;
  padding-right: 14px;
}

.ulPlataforma .liPlataformaAgregada a span {
  padding:0;
  margin:0;
  position:absolute;
  top: 30px;
  color: #262626;
  letter-spacing: 4px;
  transition: .5s;
  /* color: white; */
}

.ulPlataforma:hover .liPlataformaAgregada a span {
  color: white;
  z-index: 1005;
}

.ulPlataforma .liPlataformaAgregada a {
  text-decoration: none;
  display:absolute;
  display:block;
  width:210px;
  height:80px;
  background:  gainsboro;
  text-align:left;
  padding-left: 20px;
  transform: rotate(-30deg) skew(25deg) translate(0,0);
  transition:.5s;
  box-shadow: -20px 20px 10px rgba(0,0,0,.5);
}

.ulPlataforma .liPlataformaAgregada a:before {
  content: '';
  position: absolute;
  top:10px;
  left:-20px;
  height:100%;
  width:20px;
  background: #b1b1b1;
  transform: .5s;
  transform: rotate(0deg) skewY(-45deg);
}

.ulPlataforma .liPlataformaAgregada a:after {
  content: '';
  position: absolute;
  bottom:-20px;
  left:-10px;
  height:20px;
  width:100%;
  background: #b1b1b1;
  transform: .5s;
  transform: rotate(0deg) skewX(-45deg);
}

.ulPlataforma .liPlataformaAgregada a:hover {
  transform: rotate(-30deg) skew(25deg) translate(20px,-15px);
  box-shadow: -50px 50px 50px rgba(0,0,0,.5);
}

.ulPlataforma .liPlataformaAgregada:hover .fa {
  color:#fff;
}

.ulPlataforma .liPlataformaAgregada:hover span {
  color:#fff;
}

.ulPlataforma .liPlataformaAgregada:hover:nth-child(1) a{
  background: #dd4b39;
}
.ulPlataforma .liPlataformaAgregada:hover:nth-child(1) a:before{
  background: #b33a2b;
}
.ulPlataforma .liPlataformaAgregada:hover:nth-child(1) a:after{
  background: #e66a5a;
}

@layer demo {
  :root {
    --accent: black;
    --canvas: color-mix(in lch, canvas, canvasText 1%);
    --border: color-mix(in lch, canvas, canvasText 10%);
    --text: color-mix(in lch, canvasText, canvas 25%);
    --border-radius: 24;
    --border-width: 3;
    --trail-size: 25;
  }
  aside {
    --font-level: 1;
    /* width: 66ch; */
    width: 100%;
    max-width: calc(100vw - 4rem);
    line-height: 1.5;
    container-type: inline-size;
    position: relative;
  }

  .border {
    position: absolute;
    inset: 0;
    clip-path: inset(0 0 0 0 round calc(var(--border-radius) * 1px));
    border-radius: calc(var(--border-radius) * 1px);
    background: var(--border);
    z-index: -1;
    border: 0;
    container-type: inline-size;
  }

  .trail {
    width: calc(var(--trail-size) * 1cqmin);
    aspect-ratio: 2 / 1;
    position: absolute;
    background: radial-gradient(
      100% 100% at right,
      var(--accent, red),
      transparent 50%
    );
    offset-path: border-box;
    offset-anchor: 100% 50%;
    animation: journey var(--speed, 6s) infinite linear;
  }

  @container(width > 600px) {
    .trail {
      --speed: 12s;
    }
  }

  @keyframes journey {
    to {
      offset-distance: 100%;
    }
  }

  aside p {
    font-weight: 200;
    text-align: center;
    margin: 0;
    color: var(--text);
  }

  .content {
    background: linear-gradient(var(--canvas), var(--canvas)) padding-box,
      transparent;
    border: calc(var(--border-width) * 1px) solid transparent;
    border-radius: calc(var(--border-radius) * 1px);
    padding: clamp(1rem, 3vmin + 1rem, 6rem);
    display: grid;
    gap: clamp(1rem, 3vmin + 1rem, 4rem);
  }

  footer span:nth-of-type(2) {
    color: color-mix(in lch, canvasText, canvas 70%);
  }

  aside img {
    width: 2.5rem;
    aspect-ratio: 1;
    border-radius: 50%;
  }

  /* 3D stuff */
  [data-explode='true'] aside {
    transform: scale(0.75) rotateX(-24deg) rotateY(30deg);
  }

  :root {
    --t: 1s;
    --d: 1s;
  }
  [data-explode='true'] aside {
    transition: transform var(--t);
  }

  [data-explode='true'] .border {
    transition: clip-path var(--t) calc(var(--d) * 2);
  }
  [data-explode='true'] .border {
    clip-path: inset(
      -100% -100% -100% -100% round calc(var(--border-radius) * 1px)
    );
  }

  main * {
    transform-style: preserve-3d;
  }

  [data-explode='true'] .content {
    transition: transform var(--t) calc(var(--d) * 1),
      opacity calc(var(--t) * 0.5) calc(var(--d) * 1.5);
  }

  [data-explode='true'] .content {
    transform: translate3d(0, 0, 400px);
    opacity: 0;
  }

  .border {
    transition: clip-path var(--t);
  }

  aside {
    transition: transform var(--t) calc(var(--d) * 2);
  }

  .content {
    transition: transform var(--t) calc(var(--d) * 1),
      opacity calc(var(--t) * 0.5) calc(var(--d) * 0.5);
  }
}
